{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["secondsToTimer","timer","seconds","Math","round","minutes","floor","toString","padStart","timerToSeconds","split","map","Number","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","boxHeight","boxWidth","tempCount","tempRatio","tempCeil","headings","App","useState","timerStart","setTimerStart","title","setTitle","setTimer","rows","setRows","firstCrack","setFirstCrack","timerEnd","setTimerEnd","updateRow","index","key","value","developmentPercent","Date","now","useEffect","setInterval","currentTime","timeRef","createRef","titleRef","className","onSubmit","e","preventDefault","current","placeholder","name","ref","type","class","onChange","a","target","files","base64","csv","atob","val","data","cols","pairs","Object","fromEntries","meta","filter","Meta","tempRows","Temperature","Time","time","temp","find","Value","onClick","allRows","concat","join","link","document","createElement","csvContent","encodeURIComponent","setAttribute","body","appendChild","click","remove","exportCsv","row","length","id","pattern","required","htmlFor","viewBox","Array","fill","_","stroke","points","range","riseFloor","x","y","riseCeil","heading","editTemp","onMouseEnter","onMouseLeave","test","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.25e06c7e.chunk.js","sourcesContent":["import './App.css';\nimport { useEffect, useState, createRef } from 'react';\n\nconst secondsToTimer = (timer) => {\n  const seconds = Math.round(timer) % 60;\n  const minutes = Math.floor(timer / 60)\n  return `${Math.round(minutes).toString().padStart(2, \"0\")}:${Math.round(seconds).toString().padStart(2, \"0\")}`;\n}\n\nconst timerToSeconds = timer => {\n  const [minutes, seconds] = timer.split(':').map(Number);\n  return minutes * 60 + seconds\n}\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}\n\nconst boxHeight = 300\nconst boxWidth = 500\n\nconst tempFloor = 180\nconst tempCeil = 440\nconst tempCount = 10\nconst tempRange = tempCeil - tempFloor\nconst tempRatio = boxHeight / tempRange\n\nconst riseFloor = 0\nconst riseCeil = 25\nconst riseRange = riseCeil - riseFloor\nconst riseRatio = boxHeight / riseRange\nconst headings = ['Time', 'Temperature', 'Rate of Rise']\n\nfunction App() {\n  const [timerStart, setTimerStart] = useState();\n  const [title, setTitle] = useState();\n  const [timer, setTimer] = useState(false);\n  const [rows, setRows] = useState([])\n  const [firstCrack, setFirstCrack] = useState()\n  const [timerEnd, setTimerEnd] = useState();\n  const addRow = (row) => setRows([...rows, row])\n  const updateRow = (index, key, value) => {\n    rows[index] = {\n      ...rows[index],\n      [key]: value\n    }\n    setRows([...rows])\n  }\n\n  const developmentPercent = `${Math.round((((timerEnd || Date.now() / 1000) - timerStart - firstCrack) / firstCrack) * 100)}%`;\n\n  function exportCsv() {\n    const headingRow = headings.concat(['Meta', 'Value']).join(',');\n    const firstCrackRow = ['', '', '', 'First Crack', secondsToTimer(firstCrack)]\n    const endTimeRow = ['', '', '', 'End Time', secondsToTimer(timerEnd - timerStart)]\n    const developmentRow = ['', '', '', 'Development', developmentPercent]\n    const rowsStr = rows.map(({ time, temp }, index) => [secondsToTimer(time), temp, index === 0 ? '-' : temp - rows[index - 1].temp, '', ''].join(',')).join('\\n')\n    const allRows = [headingRow, firstCrackRow, endTimeRow, developmentRow, rowsStr].join('\\n')\n    const link = document.createElement(\"a\");\n    const csvContent = \"data:text/csv;charset=utf-8,\" + encodeURIComponent(allRows)\n    link.setAttribute(\"href\", csvContent);\n    link.setAttribute(\"download\", `${title}.csv`);\n    document.body.appendChild(link);\n    link.click();\n    link.remove()\n  }\n\n  useEffect(() => {\n    if (!timerStart || timerEnd) return;\n    setInterval(() => {\n      setTimer(Date.now() / 1000 - timerStart);\n    }, 1000);\n  }, [timerStart, timerEnd])\n  const currentTime = secondsToTimer(timer)\n  const timeRef = createRef()\n  const titleRef = createRef()\n\n  return (\n    <div className=\"App\">\n      {typeof timerStart === 'undefined' ?\n        <><form onSubmit={(e) => {\n          e.preventDefault();\n          setTitle(titleRef.current.value)\n          setTimerStart(Date.now() / 1000)\n        }\n        }>\n          <div className=\"input-wrapper\">\n            <input placeholder=\" \" name=\"title\" ref={titleRef} />\n            <label>Roast Title</label>\n          </div>\n          <button className=\"btn\" type=\"submit\">\n            Start Roast\n          </button>\n        </form>\n          <hr />\n          <label>Upload CSV</label>\n          <input type=\"file\" class=\"btn\" onChange={async (e) => {\n            const base64 = await getBase64(e.target.files[0]);\n            const csv = atob(base64.split('data:text/csv;base64,')[1])\n            const [headings, ...rows] = csv.split('\\n').map(val => val.split(','));\n            const data = rows.map(cols => {\n              const pairs = cols.map((val, index) => ([\n                headings[index], val\n              ]))\n              return Object.fromEntries(pairs);\n            });\n\n            const meta = data.filter(({ Meta }) => Meta)\n            const tempRows = data.filter(({ Meta }) => !Meta)\n\n            setRows(tempRows.map(({ Temperature, Time }) => ({\n              time: timerToSeconds(Time),\n              temp: Temperature\n            })))\n            setTimerEnd(timerToSeconds(meta.find(({ Meta }) => Meta === 'End Time')?.Value))\n            setFirstCrack(timerToSeconds(meta.find(({ Meta }) => Meta === 'First Crack')?.Value))\n            setTimerStart(0)\n\n          }} />\n        </>\n        : <div>\n          <h1>{timerEnd ? `End Time: ${secondsToTimer(timerEnd - timerStart)}` : `Current Time: ${currentTime}`}</h1>\n          <div className=\"grid\">\n            {!timerEnd ?\n              <form\n                className=\"set-temp\"\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  addRow({\n                    time: rows.length * 30 + 30,\n                    temp: timeRef.current.value,\n                  })\n                  timeRef.current.value = \"\"\n                }\n                }>\n                <h2>Temperature</h2>\n                <div className=\"input-wrapper\">\n                  <input placeholder=\" \" id=\"temp\" ref={timeRef} name=\"temp\" pattern=\"^[0-9]+$\" required />\n                  <label htmlFor=\"temp\">Set Temperature at {secondsToTimer(rows.length * 30 + 30)}</label>\n                </div>\n                <button className=\"btn\" type=\"submit\">Submit</button>\n              </form>\n              : <div>\n                {typeof title !== 'undefined' && <button className=\"btn\" type=\"submit\" onClick={() => exportCsv()}>Export CSV</button>}\n              </div>\n            }\n            <svg viewBox={`0 0 ${boxWidth} ${boxHeight}`} className=\"chart\">\n\n              {new Array(14).fill().map((_, index) =>\n                <polyline\n                  fill=\"none\"\n                  stroke=\"#eee\"\n                  stroke-width=\"1\"\n                  points={`${boxWidth / 15 * (index + 1) + 1},0\n                ${boxWidth / 15 * (index + 1) + 1},${boxHeight}`}\n                />)}\n\n              {new Array(14).fill().map((_, index) =>\n                <polyline\n                  fill=\"none\"\n                  stroke=\"#eee\"\n                  stroke-width=\"1\"\n                  points={`0,${boxHeight - index * ((boxHeight + boxHeight / tempCount) / tempCount)}\n                  ${boxWidth},${boxHeight - index * ((boxHeight + boxHeight / tempCount) / tempCount)}`}\n                />)}\n\n\n              <polyline\n                fill=\"none\"\n                stroke=\"red\"\n                stroke-width=\"3\"\n                points={'\\n' + rows.map(({ temp, time }) => `${boxWidth / 15 * (time / 60)},${temp * tempRatio * -1 + tempFloor * tempRatio + boxHeight}`).join('\\n')}\n              />\n              <polyline\n                fill=\"none\"\n                stroke=\"blue\"\n                stroke-width=\"3\"\n                points={'\\n' + rows.map(({ temp, time }, index) => {\n                  const range = index === 0 ? 0 : temp - rows[index - 1].temp\n                  return `${boxWidth / 15 * (time / 60)},${range * riseRatio * -1 + riseFloor * riseRatio + boxHeight}`\n                }).join('\\n')}\n              />\n\n              {new Array(tempCount).fill(0).map((_, index) => <text x=\"5\" y={boxHeight - index * ((boxHeight + boxHeight / tempCount) / tempCount) + 2.5} font-size=\"8\">{Math.round(index * (tempRange / (tempCount - 1))) + tempFloor}F</text>)}\n              {new Array(tempCount).fill(0).map((_, index) => <text x=\"480\" y={boxHeight - index * ((boxHeight + boxHeight / tempCount) / tempCount) + 2.5} font-size=\"8\">{Math.round(index * (riseRange / (tempCount - 1)))}</text>)}\n              {new Array(14).fill().map((_, index) => <text x={boxWidth / 15 * (index + 1)} y=\"300\" font-size=\"8\">{index + 1}</text>)}\n            </svg>\n            <div className=\"table\">\n              <table>\n                <thead>\n                  <tr>\n                    {headings.map(heading => <th>{heading}</th>)}\n                  </tr>\n                </thead>\n                <tbody>\n                  {rows.map(({ time, temp, editTemp }, index) => <tr>\n                    <td>{secondsToTimer(time)}</td>\n                    <td\n                      onMouseEnter={() => updateRow(index, 'editTemp', true)}\n                      onMouseLeave={() => updateRow(index, 'editTemp', false)}>\n                      {editTemp ? <input onChange={(e) => {\n                        if (!/^[0-9]+$/.test(e.target.value)) return\n                        updateRow(index, 'temp', e.target.value)\n                      }} value={temp} /> : temp}\n                    </td>\n                    <td>{index === 0 ? '-' : temp - rows[index - 1].temp}</td>\n                  </tr>)}\n                </tbody>\n              </table>\n            </div>\n            <div className=\"development\">\n              <h2>Development</h2>\n              {!firstCrack ?\n                <button className=\"btn\" type=\"button\" onClick={() => setFirstCrack(Date.now() / 1000 - timerStart)}>Set first crack at {currentTime}</button>\n                : <table>\n                  <thead>\n                    <tr>\n                      <th>First Crack</th>\n                      <th>Development Percent</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td>{secondsToTimer(firstCrack)}</td>\n                      <td>{developmentPercent}</td>\n                    </tr>\n                  </tbody>\n                  {!timerEnd && <button className=\"btn\" type=\"button\" onClick={() => setTimerEnd(Date.now() / 1000)}>STOP</button>}\n                </table>}\n            </div>\n          </div>\n        </div>}\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}